FROM node:16-alpine as builder

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./
COPY yarn.lock ./

# Install dependencies with legacy peer deps to avoid conflicts
RUN npm install --legacy-peer-deps \
  --prefer-offline \
  --frozen-lockfile \
  --non-interactive \
  --production=false

# Copy the rest of the application
COPY . .

# Build the application
RUN npm run build

# Production dependencies
RUN rm -rf node_modules && \
  NODE_ENV=production npm install --legacy-peer-deps \
  --prefer-offline \
  --pure-lockfile \
  --non-interactive \
  --production=true

FROM builder

WORKDIR /app

COPY --from=builder /app .

ENV HOST 0.0.0.0
EXPOSE 3000

CMD [ "npm", "start" ]